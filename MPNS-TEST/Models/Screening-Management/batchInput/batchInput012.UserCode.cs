///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace MPNS_TEST.Models.Screening_Management.batchInput
{
    public partial class batchInput012
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void DoDelay2()
        {
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.");
            Delay.Duration(300, false);
        }

        public void Set_value_批量录入关联依据(RepoItemInfo selecttagInfo)
        {
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '2' on item 'selecttagInfo'.", selecttagInfo);
            selecttagInfo.FindAdapter<SelectTag>().Element.SetAttributeValue("TagValue", "2");
        }

        public void batchInput012_Mouse_wheel1()
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -2000 units.");
            Mouse.ScrollWheel(-2000);
        }

        public void batchInput012_Mouse_wheel()
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -2000 units.");
            Mouse.ScrollWheel(-2000);
        }

        public void DoDelay1()
        {
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.");
            Delay.Duration(300, false);
        }

        public void Mouse_Click_数据来源(RepoItemInfo atagInfo)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'atagInfo' at Center.", atagInfo);
            atagInfo.FindAdapter<ATag>().Click();
        }

        public void DoDelay()
        {
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.");
            Delay.Duration(300, false);
        }

        public void Mouse_Click_参数信息(RepoItemInfo atagInfo)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'atagInfo' at Center.", atagInfo);
            atagInfo.FindAdapter<ATag>().Click();
        }

        public void Mouse_Click_维护管理(RepoItemInfo atagInfo)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'atagInfo' at Center.", atagInfo);
            atagInfo.FindAdapter<ATag>().Click();
        }

    }
}
